type Query {
  # User
  usersAdmin(option: Option!, condition: Condition): [User]
  userAdmin(id: ID!): User
  #userLogin(userLoginPayload: UserLoginPayload!): User!
  logOut(id: ID!): LogOutResponse
  userInfo: UserInfo
  accountCancellation(number: String!): AccountCancellationResponse!
  userLogin(userInput: UserInput!): result
  latestClassificationUser(category: String , option: Option):[User]
  reToken(token: String!): ReTokenResponse!
  # userByToken(clientType: String!, accessToken: String!): User!

  #verifySend & verifyCheck(mobile)
  verifySend(mobile: String!, area: String!): verifySendmobile!
  verifyCheck(mobile: String!, code: String!, area: Int!): verifyCheckmobile!

  circles(option: Option!, condition: Condition): [Circle!]
  circle(id: ID!): Circle!

  latestCourse(option: Option!): [Course]
  latestMainCourse(option: Option!): [MainCourse]
  latestDirectCourse(mode : String!,  authorId: String, option: Option!): [MainCourse]
  latestInformation(option: Option!): [Information]
  latestGeekInformation(option: Option!): [Information]
  detailMainCourse(courseId: String!): MainCourse

  #speech
  speechGoogle(speechRequest: SpeechRequest): speechResult


  #Latestcomment
  latestComment(entityId: String!, category: String, option :Option!): [Comment]

  #detailCourse
  detailCourse(dirId: String): [Course]

  #mobilelog
  latestMobileLog(userId: String!,option :Option!): [MobileLog]

  #growth
  latestUserGrowth(userId: String!,option :Option!): [Growth]


  #training
  latestTraining(option :Option!): [Training]

  #orderrecord
  latestRecord(authorId: String!,option :Option!): [OrderRecord]
  latestUserCourseRecord(authorId: String!, courseId: String!): result

  #manager
  queryManager(option :Option!): [Manager]

  #courseclassification
  queryCourseClassification(option :Option!): [CourseClassification]

}
